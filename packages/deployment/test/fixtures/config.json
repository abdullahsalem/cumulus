{
    "region": "us-east-1",
    "stack": "lpdaac-cumulus",
    "kesFolder": "app",
    "configFile": "app/config.yml",
    "envFile": "app/.env",
    "cfFile": "app/cloudformation.template.yml",
    "envs": {},
    "bucket": "cumulus-devseed-internal",
    "stackName": "lpdaac-cumulus",
    "prefixNoDash": "LpdaacCumulus",
    "urs_url": "https://uat.urs.earthdata.nasa.gov",
    "repo_owner": "nasa",
    "message_adapter_repo": "cumulus-message-adapter",
    "message_adapter_filename": "cumulus-message-adapter.zip",
    "shared_data_bucket": "cumulus-data-shared",
    "buckets": {
        "internal": {
            "name": "cumulus-test-sandbox-internal",
            "type": "internal"
        },
        "private": {
            "name": "cumulus-test-sandbox-private",
            "type": "private"
        },
        "protected": {
            "name": "cumulus-test-sandbox-protected",
            "type": "protected"
        },
        "public": {
            "name": "cumulus-test-sandbox-public",
            "type": "public"
        }
    },
    "system_bucket": "cumulus-devseed-internal",
    "cmr": {
        "username": "devseed",
        "provider": "CUMULUS",
        "clientId": "CUMULUS",
        "password": "kD;LfvcNTBRJXTiUBmFd9Z3Fw%wkgQhWskYyxFJ9w.fXCuq?g7"
    },
    "ecs": {
        "restartTasksOnDeploy": true,
        "amiid": "ami-a7a242da",
        "instanceType": "t2.medium",
        "volumeSize": 50,
        "availabilityZone": "us-east-1b",
        "maxInstances": 2,
        "desiredInstances": 2,
        "tasks": {
            "AsyncOperation": {
                "image": "cumuluss/async-operation:27",
                "cpu": 400,
                "memory": 700,
                "count": 1,
                "envs": {
                    "AWS_REGION": {
                        "function": "Fn::Sub",
                        "value": "${AWS::Region}"
                    }
                }
            }
        },
        "docker": {
            "registry": "dockerhub",
            "storageDriver": "overlay2",
            "username": "cumulususer"
        },
        "publicIp": true,
        "services": {
            "EcsTaskHelloWorld": {
                "image": "cumuluss/cumulus-ecs-task:1.4.0",
                "cpu": 400,
                "memory": 700,
                "count": 1,
                "envs": {
                    "AWS_DEFAULT_REGION": {
                        "function": "Fn::Sub",
                        "value": "${AWS::Region}"
                    }
                },
                "commands": [
                    "cumulus-ecs-task",
                    "--activityArn",
                    {
                        "function": "Ref",
                        "value": "EcsTaskHelloWorldActivity"
                    },
                    "--lambdaArn",
                    {
                        "function": "Ref",
                        "value": "HelloWorldLambdaFunction"
                    }
                ],
                "alarms": {
                    "TaskCountHigh": {
                        "alarm_description": "There are more instances running than the desired",
                        "comparison_operator": "GreaterThanThreshold",
                        "evaluation_periods": 1,
                        "metric": "MemoryUtilization",
                        "statistic": "SampleCount",
                        "threshold": "1"
                    }
                }
            },
            "EcsTaskHelloWorldSecond": {
                "image": "cumuluss/cumulus-ecs-task:1.4.0",
                "cpu": 400,
                "memory": 700,
                "count": 2,
                "envs": {
                    "AWS_DEFAULT_REGION": {
                        "function": "Fn::Sub",
                        "value": "${AWS::Region}"
                    }
                },
                "commands": [
                    "cumulus-ecs-task",
                    "--activityArn",
                    {
                        "function": "Ref",
                        "value": "EcsTaskHelloWorldActivity"
                    },
                    "--lambdaArn",
                    {
                        "function": "Ref",
                        "value": "HelloWorldLambdaFunction"
                    }
                ]
            }
        }
    },
    "es": {
        "name": "es5",
        "elasticSearchMapping": 8,
        "version": 5.3,
        "instanceCount": 2,
        "instanceType": "t2.small.elasticsearch",
        "volumeSize": 35,
        "alarms": {
            "NodesLow": {
                "alarm_description": "There are less instances running than the desired",
                "comparison_operator": "LessThanThreshold",
                "threshold": "2",
                "metric": "Nodes"
            },
            "NodesHigh": {
                "alarm_description": "There are more instances running than the desired",
                "comparison_operator": "GreaterThanThreshold",
                "threshold": "2",
                "metric": "Nodes"
            }
        }
    },
    "apiStage": "dev",
    "dynamos": {
        "CollectionsTable": {
            "read": 5,
            "write": 1,
            "attributes": [
                {
                    "name": "name",
                    "type": "S",
                    "schema": "HASH"
                },
                {
                    "name": "version",
                    "type": "S",
                    "schema": "RANGE"
                }
            ]
        },
        "ProvidersTable": {
            "read": 5,
            "write": 1,
            "attributes": [
                {
                    "name": "id",
                    "type": "S",
                    "schema": "HASH"
                }
            ]
        },
        "RulesTable": {
            "read": 5,
            "write": 1,
            "attributes": [
                {
                    "name": "name",
                    "type": "S",
                    "schema": "HASH"
                }
            ]
        },
        "UsersTable": {
            "read": 5,
            "write": 1,
            "attributes": [
                {
                    "name": "userName",
                    "type": "S",
                    "schema": "HASH"
                }
            ]
        }
    },
    "apis": [
        {
            "name": "distribution"
        },
        {
            "name": "backend"
        }
    ],
    "sqs": {
        "startSF": {
            "visibilityTimeout": 20,
            "retry": 30,
            "consumer": [
                {
                    "lambda": "sqs2sf",
                    "schedule": "rate(1 minute)",
                    "messageLimit": 10,
                    "state": "ENABLED"
                }
            ]
        },
        "startSFLowPriority": {
            "visibilityTimeout": 20,
            "retry": 30,
            "maxExecutions": 5,
            "consumer": [
                {
                    "lambda": "sqs2sfThrottle",
                    "schedule": "rate(1 minute)",
                    "messageLimit": 10,
                    "state": "ENABLED"
                }
            ]
        }
    },
    "stepFunctions": {
        "IngestGranule": {
            "Comment": "Ingest Granule",
            "StartAt": "Report",
            "States": {
                "Report": {
                    "Type": "Task",
                    "Resource": "${sf2snsStartLambdaFunction.Arn}",
                    "Next": "SyncGranule"
                },
                "SyncGranule": {
                    "Type": "Task",
                    "Resource": "${SyncGranuleLambdaFunction.Arn}",
                    "Retry": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "IntervalSeconds": 10,
                            "MaxAttempts": 3
                        }
                    ],
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "ResultPath": "$.exception",
                            "Next": "StopStatus"
                        }
                    ],
                    "Next": "ChooseProcess"
                },
                "ChooseProcess": {
                    "Type": "Choice",
                    "Choices": [
                        {
                            "Variable": "$.meta.process",
                            "StringEquals": "aster",
                            "Next": "AsterProcess"
                        },
                        {
                            "Variable": "$.meta.process",
                            "StringEquals": "modis",
                            "Next": "ModisProcess"
                        }
                    ]
                },
                "AsterProcess": {
                    "Type": "Task",
                    "Resource": "${AsterProcessingLambdaFunction.Arn}",
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "ResultPath": "$.exception",
                            "Next": "StopStatus"
                        }
                    ],
                    "Next": "CmrStep"
                },
                "ModisProcess": {
                    "Type": "Task",
                    "Resource": "${ModisProcessingLambdaFunction.Arn}",
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "ResultPath": "$.exception",
                            "Next": "StopStatus"
                        }
                    ],
                    "Retry": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "IntervalSeconds": 2,
                            "MaxAttempts": 3
                        }
                    ],
                    "Next": "CmrStep"
                },
                "CmrStep": {
                    "Type": "Task",
                    "Resource": "${PostToCmrLambdaFunction.Arn}",
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "ResultPath": "$.exception",
                            "Next": "StopStatus"
                        }
                    ],
                    "Next": "StopStatus"
                },
                "StopStatus": {
                    "Type": "Task",
                    "Resource": "${sf2snsEndLambdaFunction.Arn}",
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "Next": "WorkflowFailed"
                        }
                    ],
                    "End": true
                },
                "WorkflowFailed": {
                    "Type": "Fail",
                    "Cause": "Workflow failed"
                }
            }
        },
        "ParsePdr": {
            "Comment": "Parse a given PDR",
            "StartAt": "StatusReport",
            "States": {
                "StatusReport": {
                    "Type": "Task",
                    "Resource": "${sf2snsStartLambdaFunction.Arn}",
                    "Next": "ParsePdr"
                },
                "ParsePdr": {
                    "Type": "Task",
                    "Resource": "${ParsePdrLambdaFunction.Arn}",
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "ResultPath": "$.exception",
                            "Next": "StopStatus"
                        }
                    ],
                    "Next": "CheckStatus"
                },
                "CheckStatus": {
                    "Type": "Task",
                    "Resource": "${PdrStatusCheckLambdaFunction.Arn}",
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "ResultPath": "$.exception",
                            "Next": "StopStatus"
                        }
                    ],
                    "Next": "CheckAgainChoice"
                },
                "CheckAgainChoice": {
                    "Type": "Choice",
                    "Choices": [
                        {
                            "Variable": "$.payload.isFinished",
                            "BooleanEquals": false,
                            "Next": "WaitForSomeTime"
                        },
                        {
                            "Variable": "$.payload.isFinished",
                            "BooleanEquals": true,
                            "Next": "StopStatus"
                        }
                    ],
                    "Default": "StopStatus"
                },
                "WaitForSomeTime": {
                    "Type": "Wait",
                    "Seconds": 120,
                    "Next": "CheckStatus"
                },
                "StopStatus": {
                    "Type": "Task",
                    "Resource": "${sf2snsEndLambdaFunction.Arn}",
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "Next": "WorkflowFailed"
                        }
                    ],
                    "End": true
                },
                "WorkflowFailed": {
                    "Type": "Fail",
                    "Cause": "Workflow failed"
                }
            }
        },
        "DiscoverPdrs": {
            "Comment": "Discovers new PDRs from a given provider",
            "StartAt": "StartStatus",
            "States": {
                "StartStatus": {
                    "Type": "Task",
                    "Resource": "${sf2snsStartLambdaFunction.Arn}",
                    "Next": "DiscoverPdrs"
                },
                "DiscoverPdrs": {
                    "Type": "Task",
                    "Resource": "${DiscoverPdrsLambdaFunction.Arn}",
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "ResultPath": "$.exception",
                            "Next": "StopStatus"
                        }
                    ],
                    "Next": "StopStatus"
                },
                "StopStatus": {
                    "Type": "Task",
                    "Resource": "${sf2snsEndLambdaFunction.Arn}",
                    "Catch": [
                        {
                            "ErrorEquals": [
                                "States.ALL"
                            ],
                            "Next": "WorkflowFailed"
                        }
                    ],
                    "End": true
                },
                "WorkflowFailed": {
                    "Type": "Fail",
                    "Cause": "Workflow failed"
                }
            }
        }
    },
    "lambdas": {
        "AsterProcessing": {
            "handler": "lambda_handler.handler",
            "timeout": 300,
            "s3Source": {
                "bucket": "cumulus-data-shared",
                "key": "deploy/cumulus-process/aster/0.3.1.zip"
            },
            "runtime": "python2.7",
            "name": "AsterProcessing",
            "memory": 1024,
            "envs": {},
            "fullName": "lpdaac-cumulus-AsterProcessing",
            "remote": "deploy/cumulus-process/aster/0.3.1.zip",
            "bucket": "cumulus-data-shared"
        },
        "ModisProcessing": {
            "handler": "lambda_handler.handler",
            "timeout": 300,
            "s3Source": {
                "bucket": "cumulus-data-shared",
                "key": "deploy/cumulus-process/modis/0.3.1.zip"
            },
            "runtime": "python2.7",
            "name": "ModisProcessing",
            "memory": 1024,
            "envs": {},
            "fullName": "lpdaac-cumulus-ModisProcessing",
            "remote": "deploy/cumulus-process/modis/0.3.1.zip",
            "bucket": "cumulus-data-shared"
        },
        "DiscoverPdrs": {
            "handler": "index.handler",
            "timeout": 300,
            "source": "node_modules/@cumulus/discover-pdrs/dist/",
            "useMessageAdapter": true,
            "logToElasticSearch": true,
            "envs": {
                "internal": "cumulus-devseed-internal"
            },
            "name": "DiscoverPdrs",
            "memory": 1024,
            "fullName": "lpdaac-cumulus-DiscoverPdrs",
            "hash": "487d538024cfcd696cc5b17e15a56e2c8d02fabb",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/487d538024cfcd696cc5b17e15a56e2c8d02fabb-DiscoverPdrs.zip",
            "remote": "lpdaac-cumulus/lambdas/487d538024cfcd696cc5b17e15a56e2c8d02fabb-DiscoverPdrs.zip"
        },
        "ParsePdr": {
            "handler": "index.handler",
            "timeout": 300,
            "memory": 512,
            "logToElasticSearch": true,
            "source": "node_modules/@cumulus/parse-pdr/dist/",
            "useMessageAdapter": true,
            "envs": {
                "internal": "cumulus-devseed-internal"
            },
            "name": "ParsePdr",
            "fullName": "lpdaac-cumulus-ParsePdr",
            "hash": "c8d6426fa812b9a836145cf3609476219d57c1d6",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/c8d6426fa812b9a836145cf3609476219d57c1d6-ParsePdr.zip",
            "remote": "lpdaac-cumulus/lambdas/c8d6426fa812b9a836145cf3609476219d57c1d6-ParsePdr.zip"
        },
        "PdrStatusCheck": {
            "handler": "index.handler",
            "timeout": 300,
            "memory": 512,
            "source": "node_modules/@cumulus/pdr-status-check/dist/",
            "useMessageAdapter": true,
            "name": "PdrStatusCheck",
            "envs": {},
            "fullName": "lpdaac-cumulus-PdrStatusCheck",
            "hash": "f55e7397a0799575a20e5c848014f8a247f54311",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/f55e7397a0799575a20e5c848014f8a247f54311-PdrStatusCheck.zip",
            "remote": "lpdaac-cumulus/lambdas/f55e7397a0799575a20e5c848014f8a247f54311-PdrStatusCheck.zip"
        },
        "PostToCmr": {
            "handler": "index.handler",
            "timeout": 300,
            "memory": 256,
            "logToElasticSearch": true,
            "source": "node_modules/@cumulus/post-to-cmr/dist/",
            "useMessageAdapter": true,
            "envs": {
                "internal": "cumulus-devseed-internal"
            },
            "name": "PostToCmr",
            "fullName": "lpdaac-cumulus-PostToCmr",
            "hash": "fd7330437894a79dea1dc7c160ccd72af75b21c3",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/fd7330437894a79dea1dc7c160ccd72af75b21c3-PostToCmr.zip",
            "remote": "lpdaac-cumulus/lambdas/fd7330437894a79dea1dc7c160ccd72af75b21c3-PostToCmr.zip"
        },
        "SyncGranule": {
            "handler": "index.handler",
            "timeout": 300,
            "logToElasticSearch": true,
            "source": "node_modules/@cumulus/sync-granule/dist/",
            "useMessageAdapter": true,
            "envs": {
                "internal": "cumulus-devseed-internal"
            },
            "name": "SyncGranule",
            "memory": 1024,
            "fullName": "lpdaac-cumulus-SyncGranule",
            "hash": "2e1943deef7c1cf19b1d9ded2cc6831c29173886",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/2e1943deef7c1cf19b1d9ded2cc6831c29173886-SyncGranule.zip",
            "remote": "lpdaac-cumulus/lambdas/2e1943deef7c1cf19b1d9ded2cc6831c29173886-SyncGranule.zip"
        },
        "ApiDistribution": {
            "handler": "index.distribution",
            "timeout": 20,
            "memory": 256,
            "source": "node_modules/@cumulus/api/dist/",
            "apiRole": true,
            "urs": true,
            "envs": {
                "EARTHDATA_BASE_URL": "https://uat.urs.earthdata.nasa.gov",
                "EARTHDATA_CLIENT_ID": "yIlCrKtMNCYvV-goBd-xZQ",
                "EARTHDATA_CLIENT_PASSWORD": "wQsevQDgXcKK2$uW(P2UezZhgvGFUG(99TbhxqQQqnpGsFzht^",
                "protected": "cumulus-devseed-protected"
            },
            "apiGateway": [
                {
                    "api": "distribution",
                    "path": "redirect",
                    "method": "get"
                },
                {
                    "api": "distribution",
                    "path": "{granuleId}",
                    "method": "get"
                }
            ],
            "name": "ApiDistribution",
            "fullName": "lpdaac-cumulus-ApiDistribution",
            "hash": "7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip",
            "remote": "lpdaac-cumulus/lambdas/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip"
        },
        "sqs2sf": {
            "handler": "index.starter",
            "timeout": 200,
            "memory": 384,
            "source": "node_modules/@cumulus/api/dist/",
            "name": "sqs2sf",
            "envs": {},
            "fullName": "lpdaac-cumulus-sqs2sf",
            "hash": "7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip",
            "remote": "lpdaac-cumulus/lambdas/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip"
        },
        "log2elasticsearch": {
            "handler": "index.logHandler",
            "timeout": 100,
            "memory": 256,
            "envs": {
                "ES_HOST": {
                    "function": "Fn::GetAtt",
                    "array": [
                        "es5Domain",
                        "DomainEndpoint"
                    ]
                }
            },
            "source": "node_modules/@cumulus/api/dist/",
            "name": "log2elasticsearch",
            "fullName": "lpdaac-cumulus-log2elasticsearch",
            "hash": "7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip",
            "remote": "lpdaac-cumulus/lambdas/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip"
        },
        "sf2snsStart": {
            "handler": "index.sfStart",
            "timeout": 100,
            "memory": 256,
            "source": "node_modules/@cumulus/api/dist/",
            "name": "sf2snsStart",
            "envs": {},
            "fullName": "lpdaac-cumulus-sf2snsStart",
            "hash": "7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip",
            "remote": "lpdaac-cumulus/lambdas/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip"
        },
        "sf2snsEnd": {
            "handler": "index.sfEnd",
            "timeout": 100,
            "memory": 256,
            "source": "node_modules/@cumulus/api/dist/",
            "name": "sf2snsEnd",
            "envs": {},
            "fullName": "lpdaac-cumulus-sf2snsEnd",
            "hash": "7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip",
            "remote": "lpdaac-cumulus/lambdas/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip"
        },
        "ScheduleSF": {
            "description": "This lambda function is invoked by scheduled rules created via cumulus API",
            "handler": "index.scheduler",
            "timeout": 100,
            "memory": 256,
            "source": "node_modules/@cumulus/api/dist/",
            "envs": {
                "CollectionsTable": {
                    "function": "Ref",
                    "value": "CollectionsTableDynamoDB"
                },
                "ProvidersTable": {
                    "function": "Ref",
                    "value": "ProvidersTableDynamoDB"
                }
            },
            "name": "ScheduleSF",
            "fullName": "lpdaac-cumulus-ScheduleSF",
            "hash": "7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip",
            "remote": "lpdaac-cumulus/lambdas/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip"
        },
        "CustomBootstrap": {
            "handler": "index.bootstrap",
            "timeout": 100,
            "memory": 256,
            "source": "node_modules/@cumulus/api/dist/",
            "envs": {
                "internal": "cumulus-devseed-internal"
            },
            "name": "CustomBootstrap",
            "fullName": "lpdaac-cumulus-CustomBootstrap",
            "hash": "7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133",
            "bucket": "cumulus-devseed-internal",
            "local": "app/build/cloudformation/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip",
            "remote": "lpdaac-cumulus/lambdas/7f0f6d58b5bfb46ec0d42fa41345ae8ec75dc133-ApiDistribution.zip"
        }
    },
    "iams": {
        "ecsRoleArn": "arn:aws:iam::000000000000:role/lpdaac-cumulus-ecs",
        "lambdaApiGatewayRoleArn": "arn:aws:iam::000000000000:role/lpdaac-cumulus-lambda-api-gateway",
        "lambdaProcessingRoleArn": "arn:aws:iam::000000000000:role/lpdaac-cumulus-lambda-processing",
        "stepRoleArn": "arn:aws:iam::000000000000:role/lpdaac-cumulus-steprole",
        "instanceProfile": "arn:aws:iam::000000000000:instance-profile/lpdaac-cumulus-ecs"
    },
    "users": [
        {
            "username": "dereklieu"
        }
    ],
    "apiMethods": [
        {
            "name": "ApiGatewayMethodRedirectGet",
            "method": "GET",
            "cors": false,
            "resource": "ApiGateWayResourceRedirect",
            "lambda": "ApiDistribution",
            "api": "distribution"
        },
        {
            "name": "ApiGatewayMethodGranuleIdVarGet",
            "method": "GET",
            "cors": false,
            "resource": "ApiGateWayResourceGranuleIdVar",
            "lambda": "ApiDistribution",
            "api": "distribution"
        }
    ],
    "apiResources": [
        {
            "name": "ApiGateWayResourceRedirect",
            "pathPart": "redirect",
            "parents": [
                "Fn::GetAtt:",
                "- distributionRestApi",
                "- RootResourceId"
            ],
            "firstParent": true,
            "api": "distribution"
        },
        {
            "name": "ApiGateWayResourceGranuleIdVar",
            "pathPart": "{granuleId}",
            "parents": [
                "Fn::GetAtt:",
                "- distributionRestApi",
                "- RootResourceId"
            ],
            "firstParent": true,
            "api": "distribution"
        }
    ],
    "apiMethodsOptions": [],
    "apiDependencies": [
        {
            "name": "distribution",
            "methods": [
                {
                    "name": "ApiGatewayMethodRedirectGet"
                },
                {
                    "name": "ApiGatewayMethodGranuleIdVarGet"
                }
            ]
        },
        {
            "name": "backend",
            "methods": []
        }
    ],
    "workflowConfigs": {
        "IngestGranule": {
            "Report": {},
            "SyncGranule": {},
            "ChooseProcess": {},
            "AsterProcess": {},
            "ModisProcess": {},
            "CmrStep": {},
            "StopStatus": {},
            "WorkflowFailed": {}
        },
        "ParsePdr": {
            "StatusReport": {},
            "ParsePdr": {
                "provider": "{{$.meta.provider}}",
                "collection": "{{$.meta.collection}}"
            },
            "CheckStatus": {},
            "CheckAgainChoice": {},
            "WaitForSomeTime": {},
            "StopStatus": {},
            "WorkflowFailed": {}
        },
        "DiscoverPdrs": {
            "StartStatus": {},
            "DiscoverPdrs": {
                "next": "ParsePdr",
                "testing": "what{cumulus_meta.stack}is",
                "queues": "{{$.meta.queues}}",
                "stack": "{{$.cumulus_meta.stack}}",
                "provider": "{{$.meta.provider}}",
                "buckets": "{{$.cumulus_meta.buckets}}",
                "collection": "{{$.meta.collection}}"
            },
            "StopStatus": {},
            "WorkflowFailed": {}
        }
    },
    "distribution_endpoint": "https://example.execute-api.us-east-1.amazonaws.com/dev/",
    "dashboard":
    {
        "alarmTemplate": {
            "type": "metric",
            "width": 6,
            "height": 3,
            "properties": {
                "title": "alarmTemplate",
                "annotations": {
                    "alarms": [
                        "fakeArn:alarmTemplate"
                    ]
                },
                "view": "singleValue"
            }
        },
        "alarmHeader": [
            {
                "type": "text",
                "width": 24,
                "height": 1,
                "properties": {
                    "markdown": "## Alarms"
                }
            }
        ],
        "ecsHeader": [
            {
                "type": "text",
                "width": 24,
                "height": 1,
                "properties": {
                    "markdown": "# Elastic Container Service"
                }
            }
        ],
        "esHeader": [
            {
                "type": "text",
                "width": 24,
                "height": 1,
                "properties": {
                    "markdown": "# Elasticsearch Service"
                }
            }
        ],
        "esWidgets": [
            {
                "type": "text",
                "width": 24,
                "height": 1,
                "properties": {
                    "markdown": "## Overall health"
                }
            },
            {
                "type": "metric",
                "width": 6,
                "height": 6,
                "properties": {
                    "view": "timeSeries",
                    "stacked": false,
                    "metrics": [
                        [
                            "AWS/ES",
                            "Nodes",
                            "DomainName",
                            "jl-test-integration-es5",
                            "ClientId",
                            "123456"
                        ]
                    ],
                    "region": "us-east-1",
                    "title": "Total nodes (Count)",
                    "period": 60,
                    "stat": "Minimum",
                    "yAxis": {
                        "left": {
                            "showUnits": false
                        }
                    }
                }
            }
        ]
    }
}
