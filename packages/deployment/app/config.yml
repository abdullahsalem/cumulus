default:
  stackName: change-me-cumulus
  stackNameNoDash: ChangeMeCumulus

  urs_url: https://uat.urs.earthdata.nasa.gov/

  non_complete_execution_payload_timeout: 30 ## days
  complete_execution_payload_timeout: 10     ## days
  complete_execution_payload_disable: false
  non_complete_execution_payload_disable: false

  oauth:
    provider: earthdata
  ## lambda function that returns temporary credentials
  sts_credentials_lambda: gsfc-ngap-sh-s3-sts-get-keys

  api_lambda_memory: 512

  repo_owner: nasa
  message_adapter_repo: cumulus-message-adapter
  message_adapter_filename: cumulus-message-adapter.zip

  customCompilation: true
  injectWorkflowLambdaAliases: true

  DLQDefaultTimeout: 60
  DLQDefaultMessageRetentionPeriod: 1209600 ## 14 days, the maximum currently allowed for SQS
  processDefaultDeadLetterQueues: true

  nested_templates:
    CumulusApiDistribution:
      cfFile: node_modules/@cumulus/deployment/app/cumulus_api.template.yml
      configFile: node_modules/@cumulus/deployment/app/cumulus_api_distribution.config.yml
    CumulusApiBackend:
      cfFile: node_modules/@cumulus/deployment/app/cumulus_api.template.yml
      configFile: node_modules/@cumulus/deployment/app/cumulus_api_backend.config.yml
    WorkflowLambdaVersions:
      cfFile: node_modules/@cumulus/deployment/app/workflow_lambda_versions.template.yml
      configFile: node_modules/@cumulus/deployment/app/workflow_lambda_versions.config.yml
    DataStorage:
      cfFile: node_modules/@cumulus/deployment/app/data_storage.template.yml
      configFile: node_modules/@cumulus/deployment/app/data_storage.config.yml

  # if not specified the value of the apigatewy backend endpoint is used
  # api_backend_url: https://apigateway-url-to-api-backend/

  # if not specified the value of the apigateway dist url is used
  # api_distribution_url: https://apigateway-url-to-distribution-app/

  params:
    - name: CmrPassword
      value: '{{CMR_PASSWORD}}' # this has to be set in .env

  shared_data_bucket: 'cumulus-data-shared'

  system_bucket: '{{buckets.internal.name}}'

  buckets:
    internal:
      name: change-me
      type: internal
    private:
      name: change-me
      type: private
    protected:
      name: change-me
      type: protected
    public:
      name: change-me
      type: public

  cmr:
    username: devseed
    provider: CUMULUS
    clientId: CUMULUS
    password: '{{CMR_PASSWORD}}'

  ems:
    provider: CUMULUS

  # this whole section has to be updated in each deployment section
  vpc:
    vpcId: '{{VPC_ID}}'         # this has to be set in .env
    subnets:
      - '{{AWS_SUBNET}}'        # this has to be set in .env
    cidrIp: '{{VPC_CIDR_IP}}'   # this has to be set in .env

  ecs:
    restartTasksOnDeploy: false
    container_stop_timeout: 2m
    amiid: ami-007571470797b8ffa
    instanceType: change-ecs-instanceType
    volumeSize: 50
    availabilityZone: 'us-east-1b'
    minInstances: 1
    desiredInstances: 1
    maxInstances: 1
    clusterAutoscaling:
      scaleInThresholdPercent: 25
      scaleInAdjustmentPercent: -5
      scaleOutThresholdPercent: 75
      scaleOutAdjustmentPercent: 10

    tasks:
      AsyncOperation:
        image: cumuluss/async-operation:25
        cpu: 400
        memory: 700
        count: 1
        envs:
          AWS_REGION:
            function: Fn::Sub
            value: '${AWS::Region}'
    docker:
      # Allowed registry values are 'dockerhub' and 'ecr'
      registry: dockerhub
      storageDriver: overlay2

  es:
    name: es5vpc
    elasticSearchMapping: 8
    version: 5.3
    instanceCount: 1
    instanceType: t2.small.elasticsearch
    volumeSize: 35
    alarms:
      NodesLow:
        alarm_description: 'There are less instances running than the desired'
        comparison_operator: LessThanThreshold
        threshold: '{{es.instanceCount}}'
        metric: Nodes

  # defining the APIs. Each item will include a separate endpoint
  apiStage: dev

  dynamos: !!files ['node_modules/@cumulus/api/config/tables.yml']

  dynamo2ElasticSearch:
    batchSize: 10
    startingPosition: TRIM_HORIZON
    lambda: dbIndexer
    tables:
      - CollectionsTable
      - RulesTable
      - ProvidersTable
      - GranulesTable
      - PdrsTable
      - ExecutionsTable

  # set to true to activate pointInTime on all tables
  enablePointInTime: false

  AutoScalingPolicyConfiguration:
    targetValue: 30
    scaleInCooldown: 0
    scaleOutCooldown: 0

  sns:
    # this topic receives all the updates from
    # step functions
    sftracker:
      subscriptions:
        lambda:
          endpoint:
            function: Fn::GetAtt
            array:
              - sns2elasticsearchLambdaFunction
              - Arn
          protocol: lambda

    # This topic receives errored kinesis messages and tries them again.
    kinesisFallback:
      subscriptions:
        lambda:
          endpoint:
            function: Fn::GetAtt
            array:
              - fallbackConsumerLambdaFunction
              - Arn
          protocol: lambda

  apis:
    - name: distribution
    - name: backend

  sqs_consumer_rate: 500
  sqs:
    startSF:
      visibilityTimeout: 60
      retry: 30
      consumer:
        - lambda: sqs2sf
          schedule: rate(1 minute)
          messageLimit: '{{sqs_consumer_rate}}'
          state: ENABLED

    triggerLambdaFailure:
      MessageRetentionPeriod: 1209600
      visibilityTimeout: 60

    kinesisFailure:
      visibilityTimeout: 20

  rules:
    backgroundJobs:
      schedule: rate(10 minutes)
      state: ENABLED
      targets:
        - lambda: jobs
    dailyEmsIngestReport:
      # run at 5:00am GMT daily
      schedule: cron(0 5 * * ? *)
      state: ENABLED
      targets:
        - lambda: EmsReport
    dailyEmsDistributionReport:
      schedule: cron(0 8 * * ? *)
      state: ENABLED
      targets:
        - lambda: EmsDistributionReport
    dailyExecutionPayloadCleanup:
      # run at 0400 GMT daily
      schedule: cron(0 4 * * ? *)
      state: ENABLED
      targets:
        - lambda: cleanExecutions

  useWorkflowLambdaVersions: true

  stepFunctions: !!files ['workflows.yml']

  lambdas: !!files [
  'lambdas.yml',
  'node_modules/@cumulus/api/config/lambdas.yml',
  'node_modules/@cumulus/api/config/workflowLambdas.yml'
  ]

  workflowLambdas: !!files [
  'lambdas.yml',
  'node_modules/@cumulus/api/config/workflowLambdas.yml'
  ]

  dashboard: !!files [
  'node_modules/@cumulus/deployment/app/cloudwatchDashboard.yml'
  ]
